namespace Oxide.Plugins
{
    [Info("RealisticFall", "Wulf/lukespragg", "2.0.1", ResourceId = 855)]
    [Description("Modify the maximum fall height for player deaths.")]

    class RealisticFall : RustPlugin
    {
        // Do NOT edit this file, instead edit RealisticFall.json in server/<identity>/oxide/config

        #region Configuration

        int MaxFallFeet => Config.Get<int>("MaxFallFeet");

        protected override void LoadDefaultConfig() => Config["MaxFallFeet"] = 12;

        #endregion

        #region Damage Modification

        void OnEntityTakeDamage(BaseEntity entity, HitInfo info)
        {
            if (!(entity is BasePlayer)) return;
            var player = entity.ToPlayer();

            if (info.damageTypes.Total() <= 0) return;
            var damageType = info.damageTypes.GetMajorityDamageType();
            if (damageType != Rust.DamageType.Fall) return;

            var oldDamage = info.damageTypes.Total();
            var newDamage = (player.Health()/MaxFallFeet)*(oldDamage*0.35f);

            info.damageTypes.Set(damageType, newDamage);
        }

        #endregion
    }
}